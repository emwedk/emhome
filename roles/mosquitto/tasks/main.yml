---
- name: "Remove directories for: {{ service.name }}"
  file:
    path: "{{ item }}"
    state: "absent"
    force: true
  loop:
    - "{{ service.dir }}"
    - "{{ service.logdir }}"
  when: rebuild | default(false) | bool

- name: "Create directories for: {{ service.name }}"
  file:
    state: directory
    path: "{{ item }}"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: '0755'
  loop:
    - "{{ service.dir }}/config"
    - "{{ service.dir }}/data"
    - "{{ service.logdir }}"

- name: Deploy Mosquitto configuration file
  template:
    src: mosquitto.conf.j2
    dest: "{{ service.dir }}/config/mosquitto.conf"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0755"
    force: no

- name: Deploy Mosquitto passwd file
  template:
    src: mosquitto.passwd.j2
    dest: "{{ service.dir }}/config/mosquitto.passwd"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0755"
    force: no

- name: Build dynamic labels dictionary
  set_fact:
    dynamic_labels: >-
      {{
        {
          'traefik.enable': 'true',
          'traefik.docker.network': smarthome.network,
          ('traefik.http.routers.' ~ service.name ~ '.rule'): 'Host(`' ~ service.domain ~ '`)',
          ('traefik.http.routers.' ~ service.name ~ '.entrypoints'): 'websecure',
          ('traefik.http.routers.' ~ service.name ~ '.service'): service.name,
          ('traefik.http.services.' ~ service.name ~ '.loadbalancer.server.port'): service.port,
        }
      }}

- name: "Run container: {{ service.name }}"
  community.docker.docker_container:
    name: "{{ service.name }}"
    hostname: "{{ service.name }}"
    domainname : "{{ smarthome.domain }}"
    image: "{{ service.image }}:{{ service.version }}"
    pull: yes
    recreate: "{{ rebuild }}"
    state: started
    restart: true
    restart_policy: unless-stopped
    networks:
      - name: "{{ smarthome.network }}"
        aliases:
          - "{{ service.name }}"
    # exposed_ports:
    #   - "{{ service.port }}"

    ports:
      - "{{ service.port }}:1883"
      
      - "9001:9001"
    volumes:
      - "{{ service.dir }}/config:/mosquitto/config"
      - "{{ service.dir }}/data:/mosquitto/data"
      - "{{ service.logdir }}:/mosquitto/log"
      - "{{ dir.certs }}:/mosquitto/certs"
    env:
      TZ: "{{ tz }}"
      PUID: "{{ user.puid }}"
      PGID: "{{ user.pgid }}"
    labels: "{{ dynamic_labels }}"
      # traefik.enable: "true"
      # traefik.docker.network: "{{ smarthome.network }}"
      # "traefik.http.routers.{{ service.name }}.entrypoints": "web"
      # "traefik.http.routers.{{ service.name }}.service": "{{ service.name }}"
      # "traefik.http.routers.{{ service.name }}.rule": "Host(`{{ service.name }}.local`)"
      # "traefik.http.services.{{ service.name }}.loadbalancer.server.port": "{{ service.port }}"

- name: Wait for Mosquitto container to be running
  community.docker.docker_container_info:
    name: "{{ service.name }}"
  register: mosquitto_info
  until: mosquitto_info.container.State.Status == "running"
  retries: 10
  delay: 3

- name: Creating Mosquitto account and password
  community.docker.docker_container_exec:
    container: "{{ service.name }}"
    command: "mosquitto_passwd -b -c /mosquitto/config/mosquitto.passwd {{ user.name }} {{ user.pass }}"
  notify: Restart mosquitto

- name: Install Zigbee2MQTT if adapter is present
  import_tasks: "subtasks/mqtt_check.yml"
