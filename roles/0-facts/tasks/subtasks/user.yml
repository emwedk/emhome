---


# Get User info
- name: Get user information
  getent:
    database: passwd
    key: "{{ user.name }}"
    split: ":"
  register: user_info

- name: Set PUID fact
  set_fact:
    user: "{{ user | combine({'puid': user_info.ansible_facts.getent_passwd[user.name][1] }) }}"
- name: Set PGID fact
  set_fact:
    user: "{{ user | combine({'pgid': user_info.ansible_facts.getent_passwd[user.name][2] }) }}"
- name: Set User Path fact
  set_fact:
    user: "{{ user | combine({'path': user_info.ansible_facts.getent_passwd[user.name][4] }) }}"

- name: Debug variable
  debug:
    var: user

- name: Stop playbook
  meta: end_play

# Get Password from User Folder
- name: Check if .passwd file exists in the base directory
  stat:
    path: "{{ user.path }}/.passwd"
  register: passwd_file

- name: Read .passwd file if it exists and is not empty
  slurp:
    src: "{{ user.path }}/.passwd"
  register: passwd_content
  when: passwd_file.stat.exists and passwd_file.stat.size > 0

- name: Set user.pass to contents of .passwd if file exists and is not empty
  set_fact:
    user: "{{ user | combine({'pass': (passwd_content.content | b64decode | trim)}) }}"
  when: passwd_file.stat.exists and passwd_file.stat.size > 0

- name: Set hashed user-pass for auth
  set_fact:
    user: "{{ user | combine({ 'hash': user.name ~ ':' ~ user.pass | password_hash('md5') }) }}"


# - name: Set user.pass to contents of .passwd if file exists and is not empty
#   set_fact:
#     user: "{{ user | combine({'pass': passwd_content.content}) }}"
#   when: passwd_file.stat.exists and passwd_file.stat.size > 0
