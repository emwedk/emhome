- name: "Create directory for: {{ service.name }}"
  file:
    path: "{{ service.dir }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: '0755'

- name: Deploy Home Assistant configuration file
  template:
    src: configuration.yaml.j2
    dest: "{{ service.dir }}/configuration.yaml"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0644"
    force: no

- name: Deploy Home Assistant secret file
  template:
    src: secret.yaml.j2
    dest: "{{ service.dir }}/secret.yaml"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0644"

- name: Ensure Home Assistant include folders exist
  file:
    path: "{{ service.dir }}/{{ item }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: '0755'
  loop:
    - automations
    - themes

- name: Ensure Home Assistant include files exist
  copy:
    dest: "{{ service.dir }}/{{ item }}"
    content: ""
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0644"
    force: no
  loop:
    - automations.yaml
    - customize.yaml
    - groups.yaml
    - scripts.yaml
    - scenes.yaml
    - template.yaml

- name: Build dynamic labels dictionary
  set_fact:
    dynamic_labels: >-
      {{
        {
          'traefik.enable': 'true',
          ('traefik.http.routers.' ~ service.name ~ '.entrypoints'): 'web',
          ('traefik.http.routers.' ~ service.name ~ '.service'): service.name,
          ('traefik.http.routers.' ~ service.name ~ '.rule'): 'Host(`' ~ ansible_default_ipv4.address ~ '`) && PathPrefix(`/`) || Host(`' ~ (app[service.name].subdomain | default(service.name)) ~ '.local`)',
          ('traefik.http.services.' ~ service.name ~ '.loadbalancer.server.port'): service.port
        }
      }}
  #'traefik.docker.network': smarthome.network,
- name: "Run container: {{ service.name }}"
  community.docker.docker_container:
    name: "{{ service.name }}"
    image: "{{ service.image }}:{{ service.version }}"
    state: started
    restart: true
    restart_policy: unless-stopped
    privileged: true # only needed for official image
    network_mode: host
    dns_servers:
      - 8.8.8.8
      - 1.1.1.1
    # networks:
    #   - name: "{{ smarthome.network }}"
    volumes:
      - /var/run/dbus:/var/run/dbus:ro
      # - /etc/resolv.conf:/etc/resolv.conf
      - /etc/localtime:/etc/localtime:ro
      - "{{ service.dir }}:/config"
    env:
      TZ: "{{ tz }}"
      PUID: "{{ user.puid }}"
      PGID: "{{ user.pgid }}"
      DOCKER_MODS: "linuxserver/mods:homeassistant-hacs"
    capabilities:
      - NET_ADMIN
      - NET_RAW
      - NET_BIND_SERVICE
      - SYS_ADMIN
    devices:
      - "{{ smarthome.zigbee_adapter }}"
      # Uncomment and adjust if Bluetooth device is present
      - "/dev/ttyS0:/dev/ttyS0"
    labels: "{{ dynamic_labels }}"
      # traefik.enable: "true"
      # traefik.docker.network: "{{ smarthome.network }}"
      # traefik.http.routers.{{ service.name }}.entrypoints: "web"
      # traefik.http.routers.{{ service.name }}.service: "{{ service.name }}"
      # traefik.http.routers.{{ service.name }}.rule: "Host(`{{ ansible_default_ipv4.address }}`) && PathPrefix(`/`)"
      # traefik.http.services.{{ service.name }}.loadbalancer.server.port: "{{ service.port }}"

      # traefik.enable: "true"
      # traefik.docker.network: "{{ smarthome.network }}"
      # traefik.http.routers.homeassistant.entrypoints: "web"
      # traefik.http.routers.homeassistant.service: "homeassistant"
      # traefik.http.routers.homeassistant.rule: "Host(`192.168.0.180`) && PathPrefix(`/`)"
      # traefik.http.services.homeassistant.loadbalancer.server.port: "{{ homeassistant.port }}"
