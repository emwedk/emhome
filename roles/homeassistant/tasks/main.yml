- name: Create role directories
  file:
    path: "{{ homeassistant.dir }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: '0755'

- name: Deploy Home Assistant configuration file
  template:
    src: configuration.yaml.j2
    dest: "{{ homeassistant.dir }}/configuration.yaml"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0644"

- name: Ensure Home Assistant include folders exist
  file:
    path: "{{ homeassistant.dir }}/{{ item }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: '0755'
  loop:
    # - automations
    - themes

- name: Ensure Home Assistant include files exist
  copy:
    dest: "{{ homeassistant.dir }}/{{ item }}"
    content: ""
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0644"
    force: no
  loop:
    - automations.yaml
    - customize.yaml
    - groups.yaml
    - scripts.yaml
    - scenes.yaml
    - template.yaml

- name: "Ensure network exists ({{ homeassistant.network }})"
  when: homeassistant.network != "host"
  community.docker.docker_network:
    name: "{{ homeassistant.network }}"
    state: "present"

- name: Run Home Assistant container
  community.docker.docker_container:
    name: homeassistant
    image: ghcr.io/home-assistant/home-assistant:latest
    state: started
    restart: true
    restart_policy: unless-stopped
    privileged: true
    # network_mode: host
    expose:
      - "{{ homeassistant.port }}"
    ports:
      - "{{ homeassistant.port }}:8123"
    networks:
      - name: "proxy"
      - name: "{{ homeassistant.network }}"
    volumes:
      - /run/dbus:/run/dbus:ro
      # - /etc/localtime:/etc/localtime:ro
      - "{{ homeassistant.dir }}:/config"
    env:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    capabilities:
      - NET_ADMIN
      - NET_BIND_SERVICE
      - SYS_ADMIN
    # devices:
    #   - "{{ smarthome.host_adapter }}:{{ smarthome.host_adapter }}"
      # Uncomment and adjust if Bluetooth device is present
      # - "/dev/ttyS0:/dev/ttyS0"
    labels:
      traefik.enable: "true"
      traefik.docker.network: "proxy"
      traefik.http.routers.homeassistant.entrypoints: "web"
      traefik.http.routers.traefik.service: "homeassistant"
      traefik.http.routers.homeassistant.rule: "Host(`homeassistant.local`)"
      traefik.http.services.homeassistant.loadbalancer.server.port: "{{ homeassistant.port }}"
