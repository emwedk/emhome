---
- name: "Check if DuckDNS variables are set"
  assert:
    that:
      - duckdns.token is defined
      - duckdns.token | length > 0
    fail_msg: "DuckDNS configuration or token is missing. Skipping DuckDNS setup."
    success_msg: "DuckDNS configuration and token found."

- block:
    - name: "Create directories for: {{ service.name }}"
      file:
        path: "{{ service.dir }}"
        state: "directory"
        owner: "{{ user.name }}"
        group: "{{ user.name }}"
        mode: "0755"

    - name: "Run DuckDNS container"
      community.docker.docker_container:
        name: "{{ service.name }}"
        image: "{{ service.image }}:{{ service.version }}"
        state: "started"
        restart: true
        restart_policy: "unless-stopped"
        networks:
          - name: "{{ smarthome.network }}"
        ports:
          - "{{ service.port }}:8053"
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - /etc/timezone:/etc/timezone:ro
          - "{{ service.dir }}:/config"
        env:
          TZ: "{{ tz }}"
          PUID: "1000"
          PGID: "1000"
          SUBDOMAINS: "{{ duckdns.subdomains | join(',') }}"
          TOKEN: "{{ duckdns.token }}"
        labels:
          traefik.enable: "true"
          # traefik.docker.network: "{{ smarthome.network }}"
          traefik.http.routers.<service.name>.entrypoints: "websecure"
          traefik.http.routers.<service.name>.service: "{{ service.name }}"
          traefik.http.routers.<service.name>.rule: "Host(`{{ service.name }}.local`)"
          traefik.http.routers.<service.name>.tls: "true"
          traefik.http.routers.<service.name>.tls.certresolver: "letsencrypt"
          traefik.http.services.<service.name>.loadbalancer.server.port: "{{ service.port }}"
  when:
    - duckdns.token is defined
    - duckdns.token | length > 0
